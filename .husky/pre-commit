#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

LC_ALL=C

local_branch="$(git rev-parse --abbrev-ref HEAD)"

invalid_branch_regex="^(main|hotfix|release|develop|features)$"

message="This branch violates the branch naming rules. Please rename your branch."

if [[ $local_branch =~ $invalid_branch_regex ]]
then
    echo "$message"
    exit 1
fi


# config=commit-msg.config.json

# # set variables
# enabled=$(jq -r .enabled $config)
# revert=$(jq -r .revert $config)
# types=($(jq -r '.types[]' $config))
# min_length=$(jq -r .length.min $config)
# max_length=$(jq -r .length.max $config)

# if [[ ! -f $config || ! $enabled ]]; then
#     exit 0
# fi




# msg=$(head -1 $1)
# if [[ ! $msg =~ $regexp ]]; then
#   echo -e "\n\e[1m\e[31m[INVALID COMMIT MESSAGE]"
#   echo -e "------------------------\033[0m\e[0m"
#   echo -e "\e[1mValid types:\e[0m \e[34m${types[@]}\033[0m"
#   echo -e "\e[1mMax length (first line):\e[0m \e[34m$max_length\033[0m"
#   echo -e "\e[1mMin length (first line):\e[0m \e[34m$min_length\033[0m\n"

#   # exit with an error
#   exit 1
# fi

# exit 0
# exec git diff-index --check --cached $against --

npm run pre-commit
